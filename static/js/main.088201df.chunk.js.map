{"version":3,"sources":["features/favouriteSlice.ts","features/withdrawSlice.ts","app/store.ts","app/hooks.ts","components/Header/Header.tsx","components/Carousel/Carousel.tsx","components/Novelties/Novelties.tsx","components/Footer/Footer.tsx","components/Item/Item.tsx","components/ItemCarousel/ItemCarousel.tsx","components/HotPrice/HotPrice.tsx","utils/api.ts","components/NewModels/NewModels.tsx","components/Category/Category.tsx","components/Path/path.tsx","components/Favorites/Favourites.tsx","components/Withdraw/Withdraw.tsx","App.tsx","index.tsx"],"names":["favouriteLocalStorageKey","getFavouritesFromLocalStorage","key","item","localStorage","getItem","JSON","parse","initialState","favorites","favouriteSlice","createSlice","name","reducers","addFavourite","state","action","itemId","push","forEach","id","setItem","stringify","writeFavouritesToLocalStorage","payload","removeFavourite","filter","deleteFavouritesFromLocalStorage","actions","withdrawLocalStorageKey","getWithdrawFromLocalStorage","saveWithdrawToLocalStorage","withdraw","withdrawSlice","addWithdraw","Object","prototype","hasOwnProperty","call","amount","encreaseAmount","decreaseAmount","deleteWithdraw","store","configureStore","reducer","favorite","favouriteReducer","withdrawReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Header","favoritesSize","length","withdrawSize","useMemo","counter","keys","e","className","to","src","alt","isActive","classNames","Carousel","imgs","containerRef","useRef","intervalRef","useState","current","setCurrent","translateX","setTranslateX","slides","items","map","img","path","desc","actionHandler","useCallback","mode","style","transitionDuration","clientWidth","prev","useEffect","transitionEnd","document","addEventListener","removeEventListener","useLayoutEffect","clearInterval","setInterval","type","onClick","ref","transform","_","index","Math","random","Novelties","Footer","href","Item","favourites","dispatch","isWithdraw","includes","isFavorite","buttonHandle","place","imageUrl","discount","ceil","price","screen","capacity","ram","ItemCarousel","title","currPage","setCurrPage","pageAmount","curr","disabled","phone","HotPrice","products","hotPhones","sort","phone1","phone2","mainLink","getPhones","fetch","then","responce","ok","Error","json","NewModels","newPhones","age","Category","Path","pathElems","pathBoldElems","elem","arr","path__bold","Favourites","favItems","setFavItems","paths","window","location","pathname","split","titlePrepared","toUpperCase","slice","phones","currPhone","find","Withdraw","scrollY","scrollPos","setScrollPos","withdraws","amountActionHandle","scrollTo","values","App","setProducts","element","replace","ReactDOM","render","getElementById"],"mappings":"ufAOMA,EAA2B,YAE3BC,EAAgC,SAACC,GACrC,IAAMC,EAAOC,aAAaC,QAAQH,GAElC,OAAIC,EACKG,KAAKC,MAAMJ,GAGb,IAwBHK,EAA8B,CAClCC,UAAWR,EAA8BD,IAG9BU,EAAiBC,YAAY,CACxCC,KAAM,WACNJ,eACAK,SAAU,CACRC,aAAc,SAACC,EAAOC,IA7BY,SACpCd,EACAe,GAEA,IAAMd,EAAOF,EAA8BC,GAErB,kBAAXe,EACTd,EAAKe,KAAKD,GAEVA,EAAOE,SAAQ,SAAAC,GAAE,OAAIjB,EAAKe,KAAKE,MAGjChB,aAAaiB,QAAQnB,EAAKI,KAAKgB,UAAUnB,IAkBrCoB,CAA8BvB,EAA0BgB,EAAOQ,SAC/DT,EAAMN,UAAN,sBAAsBM,EAAMN,WAA5B,CAAuCO,EAAOQ,WAEhDC,gBAAiB,SAACV,EAAOC,IAlBY,SAACd,EAAYe,GACpD,IAAMd,EAAOF,EAA8BC,GAE3CE,aAAaiB,QAAQnB,EAAKI,KAAKgB,UAAUnB,EAAKuB,QAAO,SAAAN,GAAE,OAAIA,IAAOH,OAgB9DU,CACE3B,EAA0BgB,EAAOQ,SAEnCT,EAAMN,UAAYM,EAAMN,UAAUiB,QAAO,SAAAN,GAAE,OAAIA,IAAOJ,EAAOQ,eAK5D,EAA0Cd,EAAekB,QAAjDd,EAAR,EAAQA,aAAcW,EAAtB,EAAsBA,gBACdf,IAAf,Q,eC/CMmB,EAA0B,WAE1BC,EAA8B,WAClC,IAAM3B,EAAOC,aAAaC,QAAQwB,GAElC,OAAI1B,EACKG,KAAKC,MAAMJ,GAGb,IAGH4B,EAA6B,SAAChB,GAClCX,aAAaiB,QAAQQ,EAAyBvB,KAAKgB,UAAUP,KAGzDP,EAA8B,CAClCwB,SAAUF,KAGCG,EAAgBtB,YAAY,CACvCC,KAAMiB,EACNrB,eACAK,SAAU,CACRqB,YAAa,SAACnB,EAAOC,GACCmB,OAAOC,UAAUC,eAAeC,KAClDR,IACAd,EAAOQ,QAAQJ,MAIfL,EAAMiB,SAAN,2BACKjB,EAAMiB,UADX,kBAEGhB,EAAOQ,QAAQJ,GAFlB,2BAE4BJ,EAAOQ,SAFnC,IAE4Ce,OAAQ,OAItDR,EAA2BhB,EAAMiB,WAEnCQ,eAAgB,SAACzB,EAAOC,GACFmB,OAAOC,UAAUC,eAAeC,KAClDR,IACAd,EAAOQ,QAAQ,MAIfT,EAAMiB,SAAShB,EAAOQ,QAAQ,IAAIe,QAAUvB,EAAOQ,QAAQ,KAG/DiB,eAAgB,SAAC1B,EAAOC,GACFmB,OAAOC,UAAUC,eAAeC,KAClDR,IACAd,EAAOQ,QAAQ,KAIZT,EAAMiB,SAAShB,EAAOQ,QAAQ,IAAIe,OAASvB,EAAOQ,QAAQ,GAAK,IAClET,EAAMiB,SAAShB,EAAOQ,QAAQ,IAAIe,QAAUvB,EAAOQ,QAAQ,KAG/DkB,eAAgB,SAAC3B,EAAOC,UACfD,EAAMiB,SAAShB,EAAOQ,SAC7BO,EAA2BhB,EAAMiB,cAKhC,EAKHC,EAAcL,QAJhBM,EADK,EACLA,YACAO,EAFK,EAELA,eACAC,EAHK,EAGLA,eACAF,EAJK,EAILA,eAEaP,IAAf,QCpFaU,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,EACVf,SAAUgB,K,mDCJDC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,OCIlDC,EAAmB,WAC9B,IAAMC,EAAgBH,GAAe,SAACpC,GAAD,OACnCA,EAAM+B,SAASrC,aAAY8C,OACvBvB,EAAWmB,GAAe,SAACpC,GAAD,OAC9BA,EAAMiB,SAASA,YAEXwB,EAAeC,mBAAQ,WAC3B,IAAIC,EAAU,EAMd,OAJAvB,OAAOwB,KAAK3B,GAAUb,SAAQ,SAAAyC,GAC5BF,GAAW1B,EAAS4B,GAAGrB,UAGlBmB,IACN,CAAC1B,IAEJ,OACE,wBAAQ6B,UAAU,SAAlB,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CACEC,GAAG,QACHD,UAAU,aAFZ,SAIE,qBACEE,IAAI,wBACJC,IAAI,OACJH,UAAU,kBAKhB,qBAAKA,UAAU,MAAf,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,cAAC,IAAD,CACEC,GAAG,QACHD,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,YACA,CAAE,YAAaD,KAJnB,oBAUF,oBAAIJ,UAAU,YAAd,SACE,cAAC,IAAD,CACEC,GAAG,UACHD,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,YACA,CAAE,YAAaD,KAJnB,sBAUF,oBAAIJ,UAAU,YAAd,SACE,cAAC,IAAD,CACEC,GAAG,WACHD,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,YACA,CAAE,YAAaD,KAJnB,uBAUF,oBAAIJ,UAAU,YAAd,SACE,cAAC,IAAD,CACEC,GAAG,eACHD,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,YACA,CAAE,YAAaD,KAJnB,mCAcR,sBAAKJ,UAAU,eAAf,UACE,eAAC,IAAD,CACEC,GAAG,cACHD,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,eACA,CAAE,YAAaD,KAJnB,UAOGX,EAAgB,GAEf,mBAAGO,UAAU,kBAAb,SACGP,IAGL,qBAAKS,IAAI,oCAAoCC,IAAI,gBAEnD,eAAC,IAAD,CACEF,GAAG,YACHD,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,eACA,CAAE,YAAaD,KAJnB,UAOGT,EAAe,GAEZ,mBAAGK,UAAU,kBAAb,SACGL,IAGP,qBAAKO,IAAI,4BAA4BC,IAAI,yBCxGxCG,G,YAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnCC,EAAeC,iBAAyB,MAExCC,EAAcD,iBAAY,MAChC,EAA8BE,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAASpB,mBAAQ,WACrB,GAAIW,EAAKb,OAAS,EAAG,CACnB,IAAMuB,EAAQV,EAAKW,KAAI,SAACC,GAAD,OACrB,oBAAiBnB,UAAU,kBAA3B,SACE,qBAAKE,IAAKiB,EAAIC,KAAMjB,IAAKgB,EAAIE,QADtBF,EAAI5D,OAKf,MAAM,CACJ,oBAAyByC,UAAU,kBAAnC,SACE,qBACEE,IAAG,UAAKK,EAAKA,EAAKb,OAAS,GAAG0B,MAC9BjB,IAAKI,EAAKA,EAAKb,OAAS,GAAG2B,QAHtBd,EAAK,GAAGhD,GAAK,IADxB,mBAOK0D,GAPL,CAQE,oBAAuCjB,UAAU,kBAAjD,SACE,qBAAKE,IAAG,UAAKK,EAAK,GAAGa,MAAQjB,IAAKI,EAAK,GAAGc,QADnCd,EAAKA,EAAKb,OAAS,GAAGnC,GAAK,KAMxC,OACE,oBAAIyC,UAAU,kBAAd,SACGO,EAAK,OAGT,CAACA,IAEEe,EAAgBC,uBAAY,SAACC,GAC7BhB,EAAaI,UACfJ,EAAaI,QAAQa,MAAMC,mBAAqB,QAEnC,SAATF,EACEZ,GAAW,GACbG,EAAc,GACdF,EAAWN,EAAKb,UAEhBqB,EAAcP,EAAaI,QAAQe,aAAef,EAAU,IAC5DC,GAAW,SAACe,GAAD,OAAUA,EAAO,MAEZ,SAATJ,IACLZ,GAAWL,EAAKb,QAClBqB,EAAcP,EAAaI,QAAQe,aAAepB,EAAKb,OAAS,IAChEmB,EAAW,KAEXE,EAAcP,EAAaI,QAAQe,aAAef,EAAU,IAC5DC,GAAW,SAACe,GAAD,OAAUA,EAAO,UAIjC,CAAChB,EAASL,IA8Cb,OA5CAsB,qBAAU,WACR,IAAMC,EAAgB,WAChBtB,EAAaI,UACXA,GAAW,IACbJ,EAAaI,QAAQa,MAAMC,mBAAqB,MAChDX,EAAcP,EAAaI,QAAQe,YAAcf,IAG/CA,GAAWL,EAAKb,SAClBc,EAAaI,QAAQa,MAAMC,mBAAqB,MAChDX,EAAcP,EAAaI,QAAQe,YAAcpB,EAAKb,WAO5D,OAFAqC,SAASC,iBAAiB,gBAAiBF,GAEpC,WACLC,SAASE,oBAAoB,gBAAiBH,MAE/C,CAAClB,EAASL,IAEb2B,2BAAgB,WACV1B,EAAaI,SACfG,EAAcP,EAAaI,QAAQe,YAAcf,KAElD,IAEHiB,qBAAU,WASR,OARInB,EAAYE,SACduB,cAAczB,EAAYE,SAG5BF,EAAYE,QAAUwB,aAAY,WAChCd,EAAc,UACb,KAEI,WACDZ,EAAYE,SACduB,cAAczB,EAAYE,YAG7B,CAACU,IAGF,sBAAKtB,UAAU,WAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wBACEqC,KAAK,SACLrC,UAAU,mBACVsC,QAAS,kBAAMhB,EAAc,SAH/B,SAKE,qBAAKpB,IAAI,mBAAmBC,IAAI,WAGlC,qBAAKH,UAAU,oBAAf,SACE,oBACEuC,IAAK/B,EACLR,UAAU,sBACVyB,MACE,CAAEe,UAAU,eAAD,QAAkB1B,EAAlB,cAJf,SAOGE,MAIL,wBACEqB,KAAK,SACLrC,UAAU,mBACVsC,QAAS,kBAAMhB,EAAc,SAH/B,SAKE,qBACEpB,IAAI,mBACJC,IAAI,OACJH,UAAU,4BAKhB,qBAAKA,UAAU,iBAAf,SACGO,EAAKW,KAAI,SAACuB,EAAGC,GAAJ,OACR,qBAEE1C,UAAWK,IACT,sBACA,CAAE,wBAAyBqC,EAAQ,IAAM9B,KAHtC+B,KAAKC,oBC1JTC,EAAsB,WAmBjC,OACE,yBAAS7C,UAAU,YAAnB,SACE,cAAC,EAAD,CAAUO,KApBK,CACjB,CACEhD,GAAI,EACJ6D,KAAM,mBACNC,KAAM,WAER,CACE9D,GAAI,EACJ6D,KAAM,mBACNC,KAAM,WAER,CACE9D,GAAI,EACJ6D,KAAM,mBACNC,KAAM,iBCjBCyB,G,MAAkB,WAC7B,OACE,wBAAQ9C,UAAU,SAAlB,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,eAAf,SACE,mBAAG+C,KAAK,IAAI/C,UAAU,eAAtB,SACE,qBACEE,IAAI,wBACJC,IAAI,aAIV,qBAAKH,UAAU,mBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,mBAAG+C,KAAK,IAAI/C,UAAU,YAAtB,sBAIF,oBAAIA,UAAU,YAAd,SACE,mBAAG+C,KAAK,IAAI/C,UAAU,YAAtB,wBAIF,oBAAIA,UAAU,YAAd,SACE,mBAAG+C,KAAK,IAAI/C,UAAU,YAAtB,6BAQR,oBACE+C,KAAK,IACL/C,UAAU,iBAFZ,UAIE,oBAAIA,UAAU,sBAAd,yBAGA,qBACEA,UAAU,wBADZ,SAGE,qBACEE,IAAI,4BACJC,IAAI,SACJH,UAAU,8BCrCXgD,G,YAAwB,SAAC,GAE/B,IADL1G,EACI,EADJA,KAEM2G,EAAa3D,GAAe,SAACpC,GAAD,OAChCA,EAAM+B,SAASrC,aACXuB,EAAWmB,GAAe,SAACpC,GAAD,OAC9BA,EAAMiB,SAASA,YAEX+E,EAAW9D,IAEX+D,EAAavD,mBAAQ,WACzB,OAAOtB,OAAOwB,KAAK3B,GAAUiF,SAAS9G,EAAKiB,MAC1C,CAACY,IAEEkF,EAAazD,mBAAQ,WACzB,OAAOqD,EAAWG,SAAS9G,EAAKiB,MAC/B,CAAC0F,IAEEK,EAAe,SAACC,GACN,aAAVA,EAEAL,EADEG,EACOzF,EAAgBtB,EAAKiB,IAErBN,EAAaX,EAAKiB,KAEV,aAAVgG,GAEPL,EADEC,EACOtE,EAAevC,EAAKiB,IAEpBc,EAAY/B,KAK3B,OACE,sBAAK0D,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBACEE,IAAG,YAAO5D,EAAKkH,UACfrD,IAAK7D,EAAKiB,GACVyC,UAAU,kBAId,oBAAIA,UAAU,cAAd,SACG1D,EAAKS,UAIV,sBAAKiD,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACG1D,EAAKmH,SAEF,qCACE,mBAAGzD,UAAU,gBAAb,SACG2C,KAAKe,KAAKpH,EAAKqH,QAAU,IAAMrH,EAAKmH,UAAY,QAGnD,mBAAGzD,UAAU,sBAAb,SACG1D,EAAKqH,WAKV,mBAAG3D,UAAU,gBAAb,SACG1D,EAAKqH,UAKd,qBAAK3D,UAAU,oBAAf,SACE,qBAAIA,UAAU,0BAAd,UACE,qBAAIA,UAAU,cAAd,UACE,mBAAGA,UAAU,cAAb,oBAGA,mBAAGA,UAAU,eAAb,SACG1D,EAAKsH,YAGV,qBAAI5D,UAAU,cAAd,UACE,mBAAGA,UAAU,cAAb,sBAGA,mBAAGA,UAAU,eAAb,SACG1D,EAAKuH,cAGV,qBAAI7D,UAAU,cAAd,UACE,mBAAGA,UAAU,cAAb,iBAGA,mBAAGA,UAAU,eAAb,SACG1D,EAAKwH,cAMd,sBAAK9D,UAAU,gBAAf,UACE,wBACEqC,KAAK,SACLrC,UAAWK,IACT,YACA,CAAE,sBAAuB8C,IAE3Bb,QAAS,kBAAMgB,EAAa,aAN9B,yBAWA,wBACEjB,KAAK,SACLrC,UAAU,iBACVsC,QAAS,kBAAMgB,EAAa,aAH9B,SAKE,qBAAKpD,IAAG,iCAA4BmD,EAAa,WAAa,GAAtD,QAAgElD,IAAI,iCCtH3E4D,G,MAAgC,SAAC,GAGvC,IAFLC,EAEI,EAFJA,MACA/C,EACI,EADJA,MAEA,EAAgCN,mBAAS,GAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KAGMC,EAAavE,mBAAQ,kBAAOqB,EAC9B0B,KAAKe,KAAKzC,EAAMvB,OAAS,GACzB,IACJ,CAACuB,IAEKK,EAAgB,SAACE,GACR,SAATA,GAAmByC,EAAWE,EAAa,EAC7CD,GAAY,SAAAE,GAAI,OAAIA,EAAO,KACT,SAAT5C,GAAmByC,EAAW,GACvCC,GAAY,SAAAE,GAAI,OAAIA,EAAO,MAI/B,OACE,sBAAKpE,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,sBAAd,SACGgE,IAGH,sBAAKhE,UAAU,wBAAf,UACE,wBACEqE,SAAuB,IAAbJ,EACVjE,UAAWK,IACT,uBACA,iBACA,CAAE,iCAA+C,IAAb4D,IAEtC5B,KAAK,SACLC,QAAS,kBAAMhB,EAAc,SAR/B,SAUE,qBACEpB,IAAI,mBACJC,IAAI,OACJH,UAAU,qBAId,wBACEqE,SAAUJ,IAAaE,EAAa,EACpCnE,UAAWK,IACT,uBACA,CAAE,iCAAkC4D,IAAaE,EAAa,IAEhE9B,KAAK,SACLC,QAAS,kBAAMhB,EAAc,SAP/B,SASE,qBACEpB,IAAI,mBACJC,IAAI,OACJH,UAAU,kBAMlB,qBAAKA,UAAU,qBAAf,SACE,qBACEA,UAAU,wBACVyB,MAAO,CAAEe,UAAU,cAAD,OA7Db,MA6D8ByB,EAAjB,QAFpB,gBAIGhD,QAJH,IAIGA,OAJH,EAIGA,EAAOC,KAAI,SAAAoD,GAAK,OACf,cAAC,EAAD,CACEhI,KAAMgI,GACDA,EAAM/G,gBC1EZgH,EAA4B,SAAC,GAEnC,IADLC,EACI,EADJA,SAEMC,EAAY7E,mBAAQ,WAIxB,OAHqB4E,EAASE,MAAK,SAACC,EAAQC,GAAT,OACjCA,EAAOnB,SAAWkB,EAAOlB,YAEN5F,QAAO,SAAAyG,GAAK,OAAIA,EAAMb,SAAW,OAExD,CAACe,IAED,OACE,yBAASxE,UAAU,WAAnB,SACGyE,GAEG,cAAC,EAAD,CACET,MAAM,aACN/C,MAAOwD,OCvBbI,EAAW,kEAEJC,EAAY,WACvB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,UAAqBG,MAAK,SAAAC,GACpC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAGZ,OAAOF,EAASG,WCDPC,G,MAA6B,SAAC,GAEpC,IADLb,EACI,EADJA,SAEMc,EAAY1F,mBAAQ,WAGxB,OAFuB4E,EAAS3G,QAAO,SAAAyG,GAAK,OAAIA,EAAMiB,IAAM,MAEtCb,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOY,IAAMX,EAAOW,SAErE,CAACf,IAED,OACE,yBAASxE,UAAU,YAAnB,SACGsF,GAEG,cAAC,EAAD,CACEtB,MAAM,mBACN/C,MAAOqE,QCtBNE,G,MAAqB,WAChC,OACE,0BAASxF,UAAU,WAAnB,UACE,oBAAIA,UAAU,kBAAd,8BAIA,qBAAIA,UAAU,iBAAd,UACE,qBAAIA,UAAU,iBAAd,UACE,qBACEE,IAAI,4BACJC,IAAI,SACJH,UAAU,oBAEZ,oBAAIA,UAAU,iBAAd,2BACA,mBAAGA,UAAU,mBAAb,uBAEF,qBAAIA,UAAU,iBAAd,UACE,qBACEE,IAAI,6BACJC,IAAI,SACJH,UAAU,oBAEZ,oBAAIA,UAAU,iBAAd,oBACA,mBAAGA,UAAU,mBAAb,uBAEF,qBAAIA,UAAU,iBAAd,UACE,qBACEE,IAAI,iCACJC,IAAI,SACJH,UAAU,oBAEZ,oBAAIA,UAAU,iBAAd,yBACA,mBAAGA,UAAU,mBAAb,+BC3BGyF,G,MAAwB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACjD,OACE,sBAAK3F,UAAU,OAAf,UACE,cAAC,IAAD,CACEC,GAAG,QACHD,UAAU,aAFZ,SAIE,qBACEE,IAAI,0BACJC,IAAI,OACJH,UAAU,gBAGd,qBAAKA,UAAU,cAAf,SAA8B,MAC7B0F,EAAUxE,KAAI,SAAC0E,EAAMlD,EAAOmD,GAC3B,OAAIA,EAAInG,OAAS,EAAIgD,EAEjB,qCACE,cAAC,IAAD,CACEzC,GAAE,WAAM2F,GACR5F,UAAWK,IACT,aACA,CAAEyF,WAAYH,EAAcvC,SAASwC,KAJzC,SAQGA,GAFIA,GAIP,qBAAK5F,UAAU,cAAf,SAA8B,SAMlC,cAAC,IAAD,CACEC,GAAE,WAAM2F,GACR5F,UAAWK,IACT,aACA,CAAEyF,WAAYH,EAAcvC,SAASwC,KAJzC,SAQGA,GAFIA,WCzCJG,G,MAAuB,WAClC,MAAgCpF,mBAAkB,IAAlD,mBAAOqF,EAAP,KAAiBC,EAAjB,KAEMjC,EAAQ,WACZ,IAAMkC,EAAQC,OAAOC,SAASC,SAASC,MAAM,KACvCC,EAAgBL,EAAMA,EAAMxG,OAAS,GAE3C,OAAO6G,EAAc,GAAGC,cAAgBD,EAAcE,MAAM,IAGxDxD,EAAa3D,GAAe,SAACpC,GAAD,OAChCA,EAAM+B,SAASrC,aAejB,OAZAiF,qBAAU,WACRiD,IAAYE,MAAK,SAAC0B,GAChBzD,EAAW3F,SAAQ,SAAAhB,GACjB,IAAMqK,EAAYD,EAAOE,MAAK,SAAAtC,GAAK,OAAIA,EAAM/G,KAAOjB,KAEhDqK,GACFV,GAAY,SAAC7B,GAAD,4BAAcA,GAAd,CAAoBuC,eAIrC,CAAC1D,IAGF,0BAASjD,UAAU,aAAnB,UACE,cAAC,EAAD,CAAM0F,UAAW,CAAC1B,KAAU2B,cAAe,KAC3C,oBAAI3F,UAAU,oBAAd,SACGgE,MAGH,oBAAIhE,UAAU,uBAAd,mBACMiD,EAAWvD,OADjB,YAIA,qBAAKM,UAAU,mBAAf,SACGgG,EAAS9E,KAAI,SAAA5E,GAAI,OAAI,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKiB,cC7B7CsJ,G,kBAAqB,WAChC,IAAM3D,EAAW9D,IAEjB,EAAkCuB,mBAASwF,OAAOW,SAAlD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAY3H,GAAe,SAACpC,GAAD,OAC/BA,EAAMiB,SAASA,YAeX+I,EAAqB,SAAC7E,EAAa9E,GAC1B,QAAT8E,EACFa,EAASvE,EAAe,CAAC,EAAGpB,KACV,WAAT8E,GACTa,EAAStE,EAAe,CAAC,EAAGrB,MAQhC,OAJAsE,qBAAU,WACRsE,OAAOgB,SAAS,EAAGJ,KAClB,CAACZ,OAAOW,UAGT,0BAAS9G,UAAU,WAAnB,UACE,cAAC,EAAD,CAAM0F,UAAW,CA1BP,WACZ,IAAMQ,EAAQC,OAAOC,SAASC,SAASC,MAAM,KACvCC,EAAgBL,EAAMA,EAAMxG,OAAS,GAE3C,OAAO6G,EAAc,GAAGC,cAAgBD,EAAcE,MAAM,GAsBxCzC,IAAU2B,cAAe,KAC3C,oBAAI3F,UAAU,kBAAd,kBAGA,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,6BACG1B,OAAO8I,OAAOH,GAAW/F,KAAI,SAAA5E,GAAI,OAChC,qBAAI0D,UAAU,iBAAd,UACE,sBAAKA,UAAU,sBAAf,UACE,qBACEE,IAAI,2BACJC,IAAI,SACJH,UAAU,kBACVsC,QAAS,kBAjCD/E,EAiCwBjB,EAAKiB,GAhCrDyJ,EAAab,OAAOW,cACpB5D,EAASrE,EAAetB,IAFD,IAACA,KAoCV,qBACE2C,IAAG,YAAO5D,EAAKkH,UACfrD,IAAK7D,EAAKiB,GACVyC,UAAU,kBAGZ,mBAAGA,UAAU,iBAAb,SAA+B1D,EAAKS,UAGtC,sBAAKiD,UAAU,uBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,wBACEqC,KAAK,SACLrC,UAAU,mBACVsC,QAAS,kBAAM4E,EAAmB,SAAU5K,EAAKiB,KAHnD,eAQA,qBAAKyC,UAAU,sBAAf,SACE,mBAAGA,UAAU,mBAAb,SAAiC1D,EAAKoC,WAGxC,wBACE2D,KAAK,SACLrC,UAAU,4CACVsC,QAAS,kBAAM4E,EAAmB,MAAO5K,EAAKiB,KAHhD,kBAQF,mBAAGyC,UAAU,kBAAb,oBACO2C,KAAKe,KAAKpH,EAAKqH,QAAU,IAAMrH,EAAKmH,UAAY,cAzCvBnH,EAAKiB,kBCSxC8J,EAvDH,WACV,MAAgC1G,qBAAhC,mBAAO6D,EAAP,KAAiB8C,EAAjB,KAMA,OAJAzF,qBAAU,WACRiD,IAAYE,MAAK,SAAC0B,GAAD,OAAqBY,EAAYZ,QACjD,IAGD,qCACE,cAAC,EAAD,IACA,sBAAM1G,UAAU,OAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,IAAImG,QAAS,cAAC,IAAD,CAAUtH,GAAG,QAAQuH,SAAO,MAErD,cAAC,IAAD,CACEpG,KAAK,QACLmG,QACE,qCACE,cAAC,EAAD,IACC/C,GACC,qCACE,cAAC,EAAD,CACEA,SAAUA,IAEZ,cAAC,EAAD,IACA,cAAC,EAAD,CACEA,SAAUA,YAQtB,cAAC,IAAD,CACEpD,KAAK,cACLmG,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CACEnG,KAAK,YACLmG,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CAAOnG,KAAK,IAAImG,QAAS,wDAK/B,cAAC,EAAD,QC3DNE,IAASC,OACP,cAAC,IAAD,CAAU5I,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJiD,SAAS4F,eAAe,W","file":"static/js/main.088201df.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nexport interface FavoriteState {\n  favorites: string[]\n}\nconst favouriteLocalStorageKey = 'favourite';\n\nconst getFavouritesFromLocalStorage = (key: string):string[] => {\n  const item = localStorage.getItem(key);\n\n  if (item) {\n    return JSON.parse(item);\n  }\n\n  return [];\n};\n\nconst writeFavouritesToLocalStorage = (\n  key:string,\n  itemId: string | string[],\n) => {\n  const item = getFavouritesFromLocalStorage(key);\n\n  if (typeof itemId === 'string') {\n    item.push(itemId);\n  } else {\n    itemId.forEach(id => item.push(id));\n  }\n\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nconst deleteFavouritesFromLocalStorage = (key:string, itemId: string) => {\n  const item = getFavouritesFromLocalStorage(key);\n\n  localStorage.setItem(key, JSON.stringify(item.filter(id => id !== itemId)));\n};\n\nconst initialState: FavoriteState = {\n  favorites: getFavouritesFromLocalStorage(favouriteLocalStorageKey),\n};\n\nexport const favouriteSlice = createSlice({\n  name: 'favorite',\n  initialState,\n  reducers: {\n    addFavourite: (state, action: PayloadAction<string>) => {\n      writeFavouritesToLocalStorage(favouriteLocalStorageKey, action.payload);\n      state.favorites = [...state.favorites, action.payload];\n    },\n    removeFavourite: (state, action: PayloadAction<string>) => {\n      deleteFavouritesFromLocalStorage(\n        favouriteLocalStorageKey, action.payload,\n      );\n      state.favorites = state.favorites.filter(id => id !== action.payload);\n    },\n  },\n});\n\nexport const { addFavourite, removeFavourite } = favouriteSlice.actions;\nexport default favouriteSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Phone } from '../types/Phone';\n\ninterface WithdrawPhone extends Phone {\n  amount: number,\n}\n\ninterface Withdraw {\n  [key: string]: WithdrawPhone,\n}\n\nexport interface WithdrawState {\n  withdraw: Withdraw,\n}\nconst withdrawLocalStorageKey = 'withdraw';\n\nconst getWithdrawFromLocalStorage = (): Withdraw => {\n  const item = localStorage.getItem(withdrawLocalStorageKey);\n\n  if (item) {\n    return JSON.parse(item);\n  }\n\n  return {};\n};\n\nconst saveWithdrawToLocalStorage = (state: Withdraw) => {\n  localStorage.setItem(withdrawLocalStorageKey, JSON.stringify(state));\n};\n\nconst initialState: WithdrawState = {\n  withdraw: getWithdrawFromLocalStorage(),\n};\n\nexport const withdrawSlice = createSlice({\n  name: withdrawLocalStorageKey,\n  initialState,\n  reducers: {\n    addWithdraw: (state, action: PayloadAction<Phone>) => {\n      const hasProperty = Object.prototype.hasOwnProperty.call(\n        getWithdrawFromLocalStorage(),\n        action.payload.id,\n      );\n\n      if (!hasProperty) {\n        state.withdraw = {\n          ...state.withdraw,\n          [action.payload.id]: { ...action.payload, amount: 1 },\n        };\n      }\n\n      saveWithdrawToLocalStorage(state.withdraw);\n    },\n    encreaseAmount: (state, action: PayloadAction<[number, string]>) => {\n      const hasProperty = Object.prototype.hasOwnProperty.call(\n        getWithdrawFromLocalStorage(),\n        action.payload[1],\n      );\n\n      if (hasProperty) {\n        state.withdraw[action.payload[1]].amount += action.payload[0];\n      }\n    },\n    decreaseAmount: (state, action: PayloadAction<[number, string]>) => {\n      const hasProperty = Object.prototype.hasOwnProperty.call(\n        getWithdrawFromLocalStorage(),\n        action.payload[1],\n      );\n\n      if (hasProperty\n        && state.withdraw[action.payload[1]].amount - action.payload[0] > 0) {\n        state.withdraw[action.payload[1]].amount -= action.payload[0];\n      }\n    },\n    deleteWithdraw: (state, action: PayloadAction<string>) => {\n      delete state.withdraw[action.payload];\n      saveWithdrawToLocalStorage(state.withdraw);\n    },\n  },\n});\n\nexport const {\n  addWithdraw,\n  decreaseAmount,\n  deleteWithdraw,\n  encreaseAmount,\n} = withdrawSlice.actions;\nexport default withdrawSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport favouriteReducer from '../features/favouriteSlice';\nimport withdrawReducer from '../features/withdrawSlice';\n\nexport const store = configureStore({\n  reducer: {\n    favorite: favouriteReducer,\n    withdraw: withdrawReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\nimport '../../styles/Nav.scss';\nimport classNames from 'classnames';\nimport { useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\n\nexport const Header: React.FC = () => {\n  const favoritesSize = useAppSelector((state: RootState) => (\n    state.favorite.favorites)).length;\n  const withdraw = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw));\n\n  const withdrawSize = useMemo(() => {\n    let counter = 0;\n\n    Object.keys(withdraw).forEach(e => {\n      counter += withdraw[e].amount;\n    });\n\n    return counter;\n  }, [withdraw]);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__content\">\n        <div className=\"header__right\">\n          <div className=\"logo\">\n            <NavLink\n              to=\"/home\"\n              className=\"logo__link\"\n            >\n              <img\n                src=\"./img/header/logo.svg\"\n                alt=\"logo\"\n                className=\"logo__img\"\n              />\n            </NavLink>\n          </div>\n\n          <nav className=\"nav\">\n            <ul className=\"nav__list\">\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/home\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Home\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/phones\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Phones\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/tablets\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Tablets\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink\n                  to=\"/accessories\"\n                  className={({ isActive }) => classNames(\n                    'nav__link',\n                    { 'is-active': isActive },\n                  )}\n                >\n                  Accessories\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <div className=\"header__left\">\n          <NavLink\n            to=\"/favourites\"\n            className={({ isActive }) => classNames(\n              'header__icon',\n              { 'is-active': isActive },\n            )}\n          >\n            {favoritesSize > 0\n            && (\n              <p className=\"header__ellipse\">\n                {favoritesSize}\n              </p>\n            )}\n            <img src=\"./img/header/favorite(Stroke).svg\" alt=\"Favorite\" />\n          </NavLink>\n          <NavLink\n            to=\"/withdraw\"\n            className={({ isActive }) => classNames(\n              'header__icon',\n              { 'is-active': isActive },\n            )}\n          >\n            {withdrawSize > 0\n              && (\n                <p className=\"header__ellipse\">\n                  {withdrawSize}\n                </p>\n              )}\n            <img src=\"./img/header/withdraw.svg\" alt=\"Withdraw\" />\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Img } from '../../types/Img';\nimport './Carousel.scss';\n\ntype Props = {\n  imgs: Img[]\n};\n\nexport const Carousel:React.FC<Props> = ({ imgs }) => {\n  const containerRef = useRef<HTMLUListElement>(null);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const intervalRef = useRef<any>(null);\n  const [current, setCurrent] = useState(1);\n  const [translateX, setTranslateX] = useState(0);\n\n  const slides = useMemo(() => {\n    if (imgs.length > 1) {\n      const items = imgs.map((img) => (\n        <li key={img.id} className=\"carousel__slide\">\n          <img src={img.path} alt={img.desc} />\n        </li>\n      ));\n\n      return [\n        <li key={imgs[0].id - 1} className=\"carousel__slide\">\n          <img\n            src={`${imgs[imgs.length - 1].path}`}\n            alt={imgs[imgs.length - 1].desc}\n          />\n        </li>,\n        ...items,\n        <li key={imgs[imgs.length - 1].id + 1} className=\"carousel__slide\">\n          <img src={`${imgs[0].path}`} alt={imgs[0].desc} />\n        </li>,\n      ];\n    }\n\n    return (\n      <li className=\"carousel__slide\">\n        {imgs[0]}\n      </li>\n    );\n  }, [imgs]);\n\n  const actionHandler = useCallback((mode: string) => {\n    if (containerRef.current) {\n      containerRef.current.style.transitionDuration = '400ms';\n\n      if (mode === 'prev') {\n        if (current <= 1) {\n          setTranslateX(0);\n          setCurrent(imgs.length);\n        } else {\n          setTranslateX(containerRef.current.clientWidth * (current - 1));\n          setCurrent((prev) => prev - 1);\n        }\n      } else if (mode === 'next') {\n        if (current >= imgs.length) {\n          setTranslateX(containerRef.current.clientWidth * (imgs.length + 1));\n          setCurrent(1);\n        } else {\n          setTranslateX(containerRef.current.clientWidth * (current + 1));\n          setCurrent((prev) => prev + 1);\n        }\n      }\n    }\n  }, [current, imgs]);\n\n  useEffect(() => {\n    const transitionEnd = () => {\n      if (containerRef.current) {\n        if (current <= 1) {\n          containerRef.current.style.transitionDuration = '0ms';\n          setTranslateX(containerRef.current.clientWidth * current);\n        }\n\n        if (current >= imgs.length) {\n          containerRef.current.style.transitionDuration = '0ms';\n          setTranslateX(containerRef.current.clientWidth * imgs.length);\n        }\n      }\n    };\n\n    document.addEventListener('transitionend', transitionEnd);\n\n    return () => {\n      document.removeEventListener('transitionend', transitionEnd);\n    };\n  }, [current, imgs]);\n\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      setTranslateX(containerRef.current.clientWidth * current);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n\n    intervalRef.current = setInterval(() => {\n      actionHandler('next');\n    }, 5000);\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [actionHandler]);\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel__body\">\n        <button\n          type=\"button\"\n          className=\"carousel__button\"\n          onClick={() => actionHandler('prev')}\n        >\n          <img src=\"./img/vector.svg\" alt=\"Prev\" />\n        </button>\n\n        <div className=\"carousel__wrapper\">\n          <ul\n            ref={containerRef}\n            className=\"carousel__container\"\n            style={\n              { transform: `translate3d(${-translateX}px, 0, 0)` }\n            }\n          >\n            {slides}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"carousel__button\"\n          onClick={() => actionHandler('next')}\n        >\n          <img\n            src=\"./img/vector.svg\"\n            alt=\"Next\"\n            className=\"carousel__mirrored\"\n          />\n        </button>\n      </div>\n\n      <div className=\"carousel__info\">\n        {imgs.map((_, index) => (\n          <div\n            key={Math.random()}\n            className={classNames(\n              'carousel__info-tile',\n              { 'carousel__active-tile': index + 1 === current },\n            )}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import './Novelties.scss';\nimport React from 'react';\nimport { Carousel } from '../Carousel';\nimport { Img } from '../../types/Img';\n\nexport const Novelties: React.FC = () => {\n  const imgs:Img[] = [\n    {\n      id: 1,\n      path: './img/banner.png',\n      desc: 'photo 1',\n    },\n    {\n      id: 2,\n      path: './img/banner.png',\n      desc: 'photo 1',\n    },\n    {\n      id: 3,\n      path: './img/banner.png',\n      desc: 'photo 1',\n    },\n  ];\n\n  return (\n    <section className=\"novelties\">\n      <Carousel imgs={imgs} />\n    </section>\n  );\n};\n","import './Footer.scss';\nimport '../../styles/Nav.scss';\n\nexport const Footer:React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container footer__content\">\n        <div className=\"footer__logo\">\n          <a href=\"/\" className=\"footer__link\">\n            <img\n              src=\"./img/header/logo.svg\"\n              alt=\"logo\"\n            />\n          </a>\n        </div>\n        <div className=\"footer__contacts\">\n          <nav className=\"nav\">\n            <ul className=\"nav__list\">\n              <li className=\"nav__item\">\n                <a href=\"/\" className=\"nav__link\">\n                  Github\n                </a>\n              </li>\n              <li className=\"nav__item\">\n                <a href=\"/\" className=\"nav__link\">\n                  Contacts\n                </a>\n              </li>\n              <li className=\"nav__item\">\n                <a href=\"/\" className=\"nav__link\">\n                  Rights\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <a\n          href=\"/\"\n          className=\"footer__to-top\"\n        >\n          <h3 className=\"footer__to-top-text\">\n            Back to top\n          </h3>\n          <div\n            className=\"footer__to-top-button\"\n          >\n            <img\n              src=\"./img/Vector (Stroke).svg\"\n              alt=\"to top\"\n              className=\"footer__arrow\"\n            />\n          </div>\n        </a>\n      </div>\n    </footer>\n  );\n};\n","import './Item.scss';\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Phone } from '../../types/Phone';\nimport { addFavourite, removeFavourite } from '../../features/favouriteSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { addWithdraw, deleteWithdraw } from '../../features/withdrawSlice';\n\ntype Props = {\n  item: Phone,\n};\n\nexport const Item: React.FC<Props> = ({\n  item,\n}) => {\n  const favourites = useAppSelector((state: RootState) => (\n    state.favorite.favorites));\n  const withdraw = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw));\n\n  const dispatch = useAppDispatch();\n\n  const isWithdraw = useMemo(() => {\n    return Object.keys(withdraw).includes(item.id);\n  }, [withdraw]);\n\n  const isFavorite = useMemo(() => {\n    return favourites.includes(item.id);\n  }, [favourites]);\n\n  const buttonHandle = (place: string) => {\n    if (place === 'favorite') {\n      if (isFavorite) {\n        dispatch(removeFavourite(item.id));\n      } else {\n        dispatch(addFavourite(item.id));\n      }\n    } else if (place === 'withdraw') {\n      if (isWithdraw) {\n        dispatch(deleteWithdraw(item.id));\n      } else {\n        dispatch(addWithdraw(item));\n      }\n    }\n  };\n\n  return (\n    <div className=\"item\">\n      <div className=\"item__header\">\n        <div className=\"item__photo-container\">\n          <img\n            src={`./${item.imageUrl}`}\n            alt={item.id}\n            className=\"item__photo\"\n          />\n        </div>\n\n        <h2 className=\"item__title\">\n          {item.name}\n        </h2>\n      </div>\n\n      <div className=\"item__body\">\n        <div className=\"item__price\">\n          {item.discount\n            ? (\n              <>\n                <p className=\"item__counted\">\n                  {Math.ceil(item.price * ((100 - item.discount) / 100))}\n                </p>\n\n                <p className=\"item__initial-price\">\n                  {item.price}\n                </p>\n              </>\n            )\n            : (\n              <p className=\"item__counted\">\n                {item.price}\n              </p>\n            )}\n        </div>\n\n        <div className=\"item__specs specs\">\n          <ul className=\"item__specs specs__list\">\n            <li className=\"specs__item\">\n              <p className=\"specs__name\">\n                Screen\n              </p>\n              <p className=\"specs__value\">\n                {item.screen}\n              </p>\n            </li>\n            <li className=\"specs__item\">\n              <p className=\"specs__name\">\n                Capacity\n              </p>\n              <p className=\"specs__value\">\n                {item.capacity}\n              </p>\n            </li>\n            <li className=\"specs__item\">\n              <p className=\"specs__name\">\n                RAM\n              </p>\n              <p className=\"specs__value\">\n                {item.ram}\n              </p>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"item__buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'item__buy',\n              { 'item__buy--selected': isWithdraw },\n            )}\n            onClick={() => buttonHandle('withdraw')}\n          >\n            Add to cart\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"item__favorite\"\n            onClick={() => buttonHandle('favorite')}\n          >\n            <img src={`./img/shopItem/favorite${isFavorite ? '(filled)' : ''}.svg`} alt=\"add to favorite\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { useMemo, useState } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { Item } from '../Item/Item';\n\nimport './ItemCarousel.scss';\n\ntype Props = {\n  title: string,\n  items: Phone[],\n};\n\nexport const ItemCarousel: React.FC<Props> = ({\n  title,\n  items,\n}) => {\n  const [currPage, setCurrPage] = useState(0);\n  const step = 272 * 4 + 17 * 4;\n\n  const pageAmount = useMemo(() => (items\n    ? Math.ceil(items.length / 4)\n    : 0),\n  [items]);\n\n  const actionHandler = (mode: string) => {\n    if (mode === 'next' && currPage < pageAmount - 1) {\n      setCurrPage(curr => curr + 1);\n    } else if (mode === 'prev' && currPage > 0) {\n      setCurrPage(curr => curr - 1);\n    }\n  };\n\n  return (\n    <div className=\"itemCarousel\">\n      <div className=\"itemCarousel__header\">\n        <h2 className=\"itemCarousel__title\">\n          {title}\n        </h2>\n\n        <div className=\"itemCarousel__buttons\">\n          <button\n            disabled={currPage === 0}\n            className={classNames(\n              'itemCarousel__button',\n              'arrow__reverse',\n              { 'itemCarousel__button--disabled': currPage === 0 },\n            )}\n            type=\"button\"\n            onClick={() => actionHandler('prev')}\n          >\n            <img\n              src=\"./img/vector.svg\"\n              alt=\"prev\"\n              className=\"arrow__reverse\"\n            />\n          </button>\n\n          <button\n            disabled={currPage === pageAmount - 1}\n            className={classNames(\n              'itemCarousel__button',\n              { 'itemCarousel__button--disabled': currPage === pageAmount - 1 },\n            )}\n            type=\"button\"\n            onClick={() => actionHandler('next')}\n          >\n            <img\n              src=\"./img/vector.svg\"\n              alt=\"prev\"\n              className=\"arrow\"\n            />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"itemCarousel__body\">\n        <div\n          className=\"itemCarousel__wrapper\"\n          style={{ transform: `translateX(${-currPage * step}px)` }}\n        >\n          {items?.map(phone => (\n            <Item\n              item={phone}\n              key={phone.id}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './HotPrice.scss';\nimport React, { useMemo } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { ItemCarousel } from '../ItemCarousel';\n\ntype Props = {\n  products: Phone[],\n};\n\nexport const HotPrice: React.FC<Props> = ({\n  products,\n}) => {\n  const hotPhones = useMemo(() => {\n    const phonesSorted = products.sort((phone1, phone2) => (\n      phone2.discount - phone1.discount));\n\n    return (phonesSorted.filter(phone => phone.discount > 0));\n  },\n  [products]);\n\n  return (\n    <section className=\"hotPrice\">\n      {hotPhones\n        && (\n          <ItemCarousel\n            title=\"Hot prices\"\n            items={hotPhones}\n          />\n        )}\n    </section>\n  );\n};\n","// import { Phone } from './types/Phone'\n\n// eslint-disable-next-line max-len\nconst mainLink = 'https://mate-academy.github.io/react_phone-catalog/api/products';\n\nexport const getPhones = () => {\n  return fetch(`${mainLink}.json`).then(responce => {\n    if (!responce.ok) {\n      throw new Error();\n    }\n\n    return responce.json();\n  });\n};\n\nexport const getCurrPhone = (phoneId: string) => {\n  return fetch(`${mainLink}/${phoneId}.json`).then(responce => {\n    if (!responce.ok) {\n      throw new Error();\n    }\n\n    return responce.json();\n  });\n};\n","import { useMemo } from 'react';\nimport { Phone } from '../../types/Phone';\nimport { ItemCarousel } from '../ItemCarousel';\n\nimport './NewModels.scss';\n\ntype Props = {\n  products: Phone[],\n};\n\nexport const NewModels: React.FC<Props> = ({\n  products,\n}) => {\n  const newPhones = useMemo(() => {\n    const preparedPhones = products.filter(phone => phone.age < 10);\n\n    return preparedPhones.sort((phone1, phone2) => phone1.age - phone2.age);\n  },\n  [products]);\n\n  return (\n    <section className=\"newModels\">\n      {newPhones\n        && (\n          <ItemCarousel\n            title=\"Brand new models\"\n            items={newPhones}\n          />\n        )}\n    </section>\n  );\n};\n","import './Category.scss';\n\n// src=\"/img/Vector (Stroke).svg\"\n\nexport const Category: React.FC = () => {\n  return (\n    <section className=\"category\">\n      <h2 className=\"category__title\">\n        Shop by category\n      </h2>\n\n      <ul className=\"category__list\">\n        <li className=\"category__item\">\n          <img\n            src=\"./img/Category/phones.jpg\"\n            alt=\"Phones\"\n            className=\"category__photo\"\n          />\n          <h2 className=\"category__name\">Mobile phones</h2>\n          <p className=\"category__amount\">amount</p>\n        </li>\n        <li className=\"category__item\">\n          <img\n            src=\"./img/Category/tablets.jpg\"\n            alt=\"Phones\"\n            className=\"category__photo\"\n          />\n          <h2 className=\"category__name\">Tabets</h2>\n          <p className=\"category__amount\">amount</p>\n        </li>\n        <li className=\"category__item\">\n          <img\n            src=\"./img/Category/accessories.jpg\"\n            alt=\"Phones\"\n            className=\"category__photo\"\n          />\n          <h2 className=\"category__name\">Accessories</h2>\n          <p className=\"category__amount\">amount</p>\n        </li>\n      </ul>\n    </section>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './Path.scss';\n\ntype Props = {\n  pathElems: string[],\n  pathBoldElems: string[],\n};\n\nexport const Path: React.FC<Props> = ({ pathElems, pathBoldElems }) => {\n  return (\n    <div className=\"path\">\n      <Link\n        to=\"/home\"\n        className=\"path__link\"\n      >\n        <img\n          src=\"./img/path/pathHome.svg\"\n          alt=\"home\"\n          className=\"path__img\"\n        />\n      </Link>\n      <div className=\"path__arrow\">{'>'}</div>\n      {pathElems.map((elem, index, arr) => {\n        if (arr.length - 1 > index) {\n          return (\n            <>\n              <Link\n                to={`/${elem}`}\n                className={classNames(\n                  'path__text',\n                  { path__bold: pathBoldElems.includes(elem) },\n                )}\n                key={elem}\n              >\n                {elem}\n              </Link>\n              <div className=\"path__arrow\">{'>'}</div>\n            </>\n          );\n        }\n\n        return (\n          <Link\n            to={`/${elem}`}\n            className={classNames(\n              'path__text',\n              { path__bold: pathBoldElems.includes(elem) },\n            )}\n            key={elem}\n          >\n            {elem}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { Phone } from '../../types/Phone';\nimport { getPhones } from '../../utils/api';\nimport { Item } from '../Item';\nimport { Path } from '../Path';\nimport './Favourites.scss';\n\nexport const Favourites: React.FC = () => {\n  const [favItems, setFavItems] = useState<Phone[]>([]);\n\n  const title = () => {\n    const paths = window.location.pathname.split('/');\n    const titlePrepared = paths[paths.length - 1];\n\n    return titlePrepared[0].toUpperCase() + titlePrepared.slice(1);\n  };\n\n  const favourites = useAppSelector((state: RootState) => (\n    state.favorite.favorites\n  ));\n\n  useEffect(() => {\n    getPhones().then((phones: Phone[]) => {\n      favourites.forEach(item => {\n        const currPhone = phones.find(phone => phone.id === item);\n\n        if (currPhone) {\n          setFavItems((curr) => [...curr, currPhone]);\n        }\n      });\n    });\n  }, [favourites]);\n\n  return (\n    <section className=\"favourites\">\n      <Path pathElems={[title()]} pathBoldElems={[]} />\n      <h1 className=\"favourites__title\">\n        {title()}\n      </h1>\n\n      <h3 className=\"favourites__subtitle\">\n        {`${favourites.length} items`}\n      </h3>\n\n      <div className=\"favourites__body\">\n        {favItems.map(item => <Item item={item} key={item.id} />)}\n      </div>\n    </section>\n  );\n};\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { Path } from '../Path';\nimport './Withdraw.scss';\nimport '../../styles/grid.scss';\nimport {\n  decreaseAmount,\n  deleteWithdraw,\n  encreaseAmount,\n} from '../../features/withdrawSlice';\n\n// interface WithdrawPhone extends Phone {\n//   amount?: number,\n// }\n\nexport const Withdraw: React.FC = () => {\n  const dispatch = useAppDispatch();\n  // const [withdraw, setWithdraw] = useState<WithdrawPhone[]>([]);\n  const [scrollPos, setScrollPos] = useState(window.scrollY);\n\n  const withdraws = useAppSelector((state: RootState) => (\n    state.withdraw.withdraw\n  ));\n\n  const title = () => {\n    const paths = window.location.pathname.split('/');\n    const titlePrepared = paths[paths.length - 1];\n\n    return titlePrepared[0].toUpperCase() + titlePrepared.slice(1);\n  };\n\n  const deleteItemHandle = (id: string) => {\n    setScrollPos(window.scrollY);\n    dispatch(deleteWithdraw(id));\n  };\n\n  const amountActionHandle = (type:string, id: string) => {\n    if (type === 'add') {\n      dispatch(encreaseAmount([1, id]));\n    } else if (type === 'remove') {\n      dispatch(decreaseAmount([1, id]));\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, scrollPos);\n  }, [window.scrollY]);\n\n  return (\n    <section className=\"withdraw\">\n      <Path pathElems={[title()]} pathBoldElems={[]} />\n      <h1 className=\"withdraw__title\">\n        Cart\n      </h1>\n      <div className=\"grid\">\n        <div className=\"grid__item grid__item-1-16\">\n          <ul>\n            {Object.values(withdraws).map(item => (\n              <li className=\"withdraw__item\" key={item.id}>\n                <div className=\"withdraw__item-info\">\n                  <img\n                    src=\"./img/withdraw/Close.svg\"\n                    alt=\"delete\"\n                    className=\"withdraw__cross\"\n                    onClick={() => deleteItemHandle(item.id)}\n                  />\n\n                  <img\n                    src={`./${item.imageUrl}`}\n                    alt={item.id}\n                    className=\"withdraw__img\"\n                  />\n\n                  <p className=\"withdraw__text\">{item.name}</p>\n                </div>\n\n                <div className=\"withdraw__item-price\">\n                  <div className=\"withdraw__counter\">\n                    <button\n                      type=\"button\"\n                      className=\"withdraw__button\"\n                      onClick={() => amountActionHandle('remove', item.id)}\n                    >\n                      -\n                    </button>\n\n                    <div className=\"withdraw__container\">\n                      <p className=\"withdraw__amount\">{item.amount}</p>\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      className=\"withdraw__button withdraw__button--active\"\n                      onClick={() => amountActionHandle('add', item.id)}\n                    >\n                      +\n                    </button>\n                  </div>\n                  <p className=\"withdraw__price\">\n                    {`$${Math.ceil(item.price * ((100 - item.discount) / 100))}`}\n                  </p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Novelties } from './components/Novelties';\nimport { Footer } from './components/Footer';\nimport { HotPrice } from './components/HotPrice';\nimport { getPhones } from './utils/api';\nimport { Phone } from './types/Phone';\nimport { NewModels } from './components/NewModels';\nimport { Category } from './components/Category';\nimport { Favourites } from './components/Favorites';\n\nimport './App.scss';\nimport { Withdraw } from './components/Withdraw';\n\nconst App = () => {\n  const [products, setProducts] = useState<Phone[]>();\n\n  useEffect(() => {\n    getPhones().then((phones: Phone[]) => setProducts(phones));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/home\" replace />} />\n\n            <Route\n              path=\"/home\"\n              element={(\n                <>\n                  <Novelties />\n                  {products && (\n                    <>\n                      <HotPrice\n                        products={products}\n                      />\n                      <Category />\n                      <NewModels\n                        products={products}\n                      />\n                    </>\n                  )}\n                </>\n              )}\n            />\n\n            <Route\n              path=\"/favourites\"\n              element={<Favourites />}\n            />\n\n            <Route\n              path=\"/withdraw\"\n              element={<Withdraw />}\n            />\n\n            <Route path=\"*\" element={<p>Page not found</p>} />\n\n          </Routes>\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}